on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test

    services:
      postgres:
        image: postgres:14
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup elixir
        uses: erlef/setup-beam@v1
        id: beam
        with:
          elixir-version: "1.14.0"
          otp-version: "25.1.2"

      - name: Get cache
        uses: actions/cache@v2
        with:
          path: |
            deps
            _build
          key: >-
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-${{ hashFiles('**/mix.lock') }}

      - name: Get dependencies
        run: mix do deps.get, deps.compile

      - name: Check unused deps
        run: mix deps.unlock --check-unused

      - name: Compile code
        run: mix compile --warnings-as-errors

      - name: Check formatting
        run: mix format --check-formatted

      - name: Run credo
        run: mix credo --strict

      - name: Setup database
        run: mix setup

      - name: Run tests
        run: mix test

      - name: Run coveralls
        run: mix coveralls.github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      MIX_ENV: prod

    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8.1

      - uses: mhanberg/gigalixir-action@v0.4.0
        with:
          GIGALIXIR_APP: testex
          GIGALIXIR_USERNAME: ${{ secrets.GIGALIXIR_USERNAME }}
          GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD }}
          SSH_PRIVATE_KEY: ${{ secrets.GIGALIXIR_SSH_PRIVATE_KEY }}
